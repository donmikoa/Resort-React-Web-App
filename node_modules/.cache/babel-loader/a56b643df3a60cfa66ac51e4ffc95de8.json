{"ast":null,"code":"import _objectSpread from \"/Users/michaeliyaomolere/Desktop/resort/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/michaeliyaomolere/Desktop/resort/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nimport Client from './contentful';\nClient.getEntries().then(response => console.log(response.items));\nconst RoomContext = React.createContext(); //\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets; //all the rooms\n\n      let tempRooms = [...rooms]; //transform value\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast == true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets == true);\n      } //change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let room = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/michaeliyaomolere/Desktop/resort/src/context.js"],"names":["React","Component","items","Client","getEntries","then","response","console","log","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","parseInt","filter","size","componentDidMount","formatData","featured","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\nimport Client from './contentful';\n\nClient.getEntries().then(response => console.log(response.items));\n\nconst RoomContext = React.createContext();\n//\nclass RoomProvider extends Component {\n\tstate = {\n\t\trooms: [],\n\t\tsortedRooms: [],\n\t\tfeaturedRooms: [],\n\t\tloading: true,\n\t\ttype: 'all',\n\t\tcapacity: 1,\n\t\tprice: 0,\n\t\tminPrice: 0,\n\t\tmaxPrice: 0,\n\t\tminSize: 0,\n\t\tmaxSize: 0,\n\t\tbreakfast: false,\n\t\tpets: false\n\t};\n\t// getData\n\n\tcomponentDidMount() {\n\t\tlet rooms = this.formatData(items);\n\t\tlet featuredRooms = rooms.filter(room => room.featured === true);\n\t\tlet maxPrice = Math.max(...rooms.map(item => item.price));\n\t\tlet maxSize = Math.max(...rooms.map(item => item.size));\n\t\tthis.setState({\n\t\t\trooms,\n\t\t\tfeaturedRooms,\n\t\t\tsortedRooms: rooms,\n\t\t\tloading: false,\n\t\t\tprice: maxPrice,\n\t\t\tmaxPrice,\n\t\t\tmaxSize\n\t\t});\n\t}\n\n\tformatData(items) {\n\t\tlet tempItems = items.map(item => {\n\t\t\tlet id = item.sys.id;\n\t\t\tlet images = item.fields.images.map(image => image.fields.file.url);\n\t\t\tlet room = { ...item.fields, images, id };\n\t\t\treturn room;\n\t\t});\n\t\treturn tempItems;\n\t}\n\n\tgetRoom = slug => {\n\t\tlet tempRooms = [...this.state.rooms];\n\t\tconst room = tempRooms.find(room => room.slug === slug);\n\t\treturn room;\n\t};\n\n\thandleChange = event => {\n\t\tconst target = event.target;\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\n\t\tconst name = event.target.name;\n\t\tthis.setState({ [name]: value }, this.filterRooms);\n\t};\n\n\tfilterRooms = () => {\n\t\tlet {\n\t\t\trooms,\n\t\t\ttype,\n\t\t\tcapacity,\n\t\t\tprice,\n\t\t\tminSize,\n\t\t\tmaxSize,\n\t\t\tbreakfast,\n\t\t\tpets\n\t\t} = this.state;\n\t\t//all the rooms\n\t\tlet tempRooms = [...rooms];\n\n\t\t//transform value\n\t\tcapacity = parseInt(capacity);\n\t\tprice = parseInt(price);\n\n\t\t//filter by type\n\t\tif (type !== 'all') {\n\t\t\ttempRooms = tempRooms.filter(room => room.type === type);\n\t\t}\n\t\t//filter by capacity\n\t\tif (capacity !== 1) {\n\t\t\ttempRooms = tempRooms.filter(room => room.capacity >= capacity);\n\t\t}\n\t\t//filter by price\n\t\ttempRooms = tempRooms.filter(room => room.price <= price);\n\t\t//filter by size\n\t\ttempRooms = tempRooms.filter(\n\t\t\troom => room.size >= minSize && room.size <= maxSize\n\t\t);\n\t\t//filter by breakfast\n\t\tif (breakfast) {\n\t\t\ttempRooms = tempRooms.filter(room => room.breakfast == true);\n\t\t}\n\t\t//filter by pets\n\t\tif (pets) {\n\t\t\ttempRooms = tempRooms.filter(room => room.pets == true);\n\t\t}\n\n\t\t//change state\n\t\tthis.setState({ sortedRooms: tempRooms });\n\t};\n\trender() {\n\t\treturn (\n\t\t\t<RoomContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\t...this.state,\n\t\t\t\t\tgetRoom: this.getRoom,\n\t\t\t\t\thandleChange: this.handleChange\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{this.props.children}\n\t\t\t</RoomContext.Provider>\n\t\t);\n\t}\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component) {\n\treturn function ConsumerWrapper(props) {\n\t\treturn (\n\t\t\t<RoomConsumer>\n\t\t\t\t{value => <Component {...props} context={value} />}\n\t\t\t</RoomConsumer>\n\t\t);\n\t};\n}\n\nexport { RoomProvider, RoomConsumer, RoomContext };\n"]},"metadata":{},"sourceType":"module"}